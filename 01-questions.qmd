---
title: "Q&As"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---

## Introduction

```
You are R software teacher specialising in outbreak analytics and epidemic modelling. Give your answer entirely as R code, including some brief comments explaining key parts of the code. Do not include the original question in your response. Begin your response with a commented line introducing the code.
```

```
NOT USED: Your can use packages from the tidyverse to manage data object.
```

## Q1: growth rate

Question: How to calculate the weekly growth rate of an outbreak? 

Conditions: 
- Use the first list element from the Simulated Ebola outbreak ebola_sim_clean object from the outbreaks R package. 
- Use the "date of onset" column to calculate the weekly growth rate. 
- Keep the first 20 weeks of the period of the analysis.

### A1

```{r}
# Load required packages
library(outbreaks)
library(i2extras)
library(dplyr)

# Load the simulated Ebola outbreak data
data(ebola_sim_clean)

# Extract the first element of the list
linelist <- ebola_sim_clean[[1]]

# Convert the data to an incidence2 object
dat <- incidence2::incidence(
  x = linelist, 
  date_index = "date_of_onset",
  interval = "week"
)

# Filter the dataset to keep the first 20 weeks. 
dat_filter <- dat[1:20,]

# Model the incidence
out <- fit_curve(dat_filter, model = "poisson", alpha = 0.05)

# Print the result
growth_rate(out)

# Plot the result
plot(out)
```

- The `outbreaks` package is loaded to access the simulated Ebola outbreak data.
- The `ebola_sim_clean` object from the package contains the simulated outbreak data.
- The `linelist` object contains the first list element from `ebola_sim_clean`.
- The `incidence2::incidence()` function converts the data object `linelist` to an `incidence2` class object.
- The `date_of_onset` column is used in the `date_index` argument as the onset dates of the outbreak.
- The `"week"` text string is used to count number of cases per week interval to calculate the weekly growth rate.  
- The `incidence2` object provides observations arranged in descendant order with respect to the `date_index`.
- The number of weeks to consider is set to 20 and stored in the `dat_filter` object.
- The `fit_curve()` function fits a Poisson linear regression model to the epicurve in the `dat_filter` object with an alpha value of `0.05` to calculate the 95% confidence intervals.
- The `growth_rate()` function calculate the weekly growth/decay rate.
- The `plot()` function plot the fitted epicurve.

### Reference

- https://www.reconverse.org/i2extras/articles/fitting_epicurves.html

## Q2: epidemiological parameters

Question: How to extract the serial interval distribution parameters of Ebola Virus Disease estimated from the WHO Ebola Response Team in 2015?

### A2

```{r}
library(epiparameter)
library(tidyverse)

epiparam <- epiparam()

epiparam_ebola <- epiparam %>% 
  filter(str_detect(disease,"Ebola")) %>% 
  filter(epi_distribution == "serial_interval") %>% 
  filter(region == "West Africa") %>% 
  filter(year == 2015)

epiparam_ebola

epidist_ebola <- as_epidist(epiparam_ebola)

epidist_ebola

plot(epidist_ebola,day_range = 0:50)
```

### Reference

## Q3: reproduction number

Questions: How to quantify the time-varying reproduction number (Rt) of the outbreak with the mean and standard deviation of the serial interval distribution?

### A3

```{r}
# Load required packages
library(outbreaks)
library(incidence)
library(EpiEstim)
library(epiparameter)
library(tidyverse)

# Load the simulated Ebola outbreak data
data(ebola_sim_clean)

# Extract the first element of the list
linelist <- ebola_sim_clean$linelist

linelist %>% as_tibble()

# Convert the data to an incidence object
dat <- incidence::incidence(linelist$date_of_onset)

epiparam <- epiparam()

epiparam_ebola <- epiparam %>% 
  filter(str_detect(disease,"Ebola")) %>% 
  filter(epi_distribution == "serial_interval") %>% 
  filter(region == "West Africa")

epiparam_ebola

# Estimate R
out <- estimate_R(incid = dat, 
                  method="parametric_si",
                  config=make_config(mean_si = epiparam_ebola$mean,
                                     std_si = epiparam_ebola$sd))

plot(out)
```

## Q4 forecast

1. How to forecast the future trajectory of the outbreak?

### A4

```{r}
# Load required packages
library(outbreaks)
library(i2extras)
library(epiparameter)
library(tidyverse)
library(projections)

# Load the simulated Ebola outbreak data
data(ebola_sim_clean)

# Extract the first element of the list
linelist <- ebola_sim_clean$linelist

# Convert the data to an incidence2 object
dat2 <- incidence2::incidence(
  x = linelist, 
  date_index = "date_of_onset",
  interval = "day"
)

# Filter the dataset to keep the first 20 weeks. 
dat2_filter <- dat2[1:48,]

# Convert the filtered data to an incidence object
dat2_filter_uncount <- dat2_filter %>% uncount(count)
dat1_filter <- incidence::incidence(dat2_filter_uncount$date_index)

plot(dat1_filter)

# Model the incidence
out <- fit_curve(x = dat2_filter,
                 model = "poisson",
                 alpha = 0.05)

plot(out)

epiparam <- epiparam()

epiparam_ebola_si <- epiparam %>% 
  filter(str_detect(disease,"Ebola")) %>% 
  filter(epi_distribution == "serial_interval") %>% 
  filter(region == "West Africa")

epiparam_ebola_si

epidist_ebola_si <- as_epidist(epiparam_ebola_si)

epidist_ebola_si

discrete_ebola_si <- discretise(epidist_ebola_si)

discrete_ebola_si

reproductive_basic <- 
  epitrix::lm2R0_sample(
    x = out %>% pull(model) %>% pluck(1),
    w = discrete_ebola_si$prob_dist,
    n = 500
  )

sample_function <- 
  function(x = reproductive_basic, n_sim = 1000){
    mu <- mean(x)
    sigma <- sd(x)
    shape_scale <- epitrix::gamma_mucv2shapescale(
      mu = mu, 
      cv = sigma / mu
    )
    sample_result <- rgamma(
      n = n_sim, 
      shape = shape_scale$shape, 
      scale = shape_scale$scale
    )
    return(sample_result)
  }

reproductive_basic_sample <- 
  sample_function(
    x = reproductive_basic,
    n_sim = 1000
  )

hist(reproductive_basic_sample)

distcrete_ebola_si <- 
  distcrete::distcrete(
    name = "gamma",
    shape = discrete_ebola_si$prob_dist$parameters$shape,
    scale = discrete_ebola_si$prob_dist$parameters$scale,
    interval = discrete_ebola_si$prob_dist$interval,
    w = discrete_ebola_si$prob_dist$w
  )

dat1_filter_projection <- 
  project(
    x = dat1_filter, 
    R = reproductive_basic_sample, # now using a sample of R values
    si = distcrete_ebola_si, 
    n_sim = 1000, 
    n_days = 14, # project over 2 weeks
    R_fix_within = TRUE
  )

plot(dat1_filter) %>% 
  add_projections(x = dat1_filter_projection,
                  quantiles = c(0.025, 0.5, 0.975))
```

### Reference

- https://epiverse-trace.github.io/epiparameter/articles/extract_convert.html
- http://www.repidemicsconsortium.org/epitrix/reference/r2R0.html
- http://www.repidemicsconsortium.org/epitrix/reference/gamma_tools.html
- https://www.reconlearn.org/solutions/real-time-response-2.html

## Q5: susceptibility matrices

Question: How to create the susceptibility matrices for a scenario where the susceptibility varies between and within groups to use with the finalsize package?

Conditions:
- This scenario assumes that, in the population, there is different susceptibility to the infection:
    - between individuals of different age groups from 20% (infants) to 100% (65+), and
    - within individuals of the same age group due the immunization effect of 25% to the 40% of each of the age groups.
- Additionally, 10% of individuals in each of the age groups have 100% susceptibility, due to no immunization or not exposed to similar pathogens previously.

### A5

```{r}
demography_groups <- c("[0,5)", "[5,18)", "[18,40)", "[40,65)", "65+")
immunization_effect <- 0.25

# susceptibility matrix
susceptibility <- tibble(
  age_group = demography_groups,
  susceptible = c(1.0, 1.0, 1.0, 1.0, 1.0),
  unimmunised = c(0.2, 0.5, 0.6, 0.9, 1.0)
) %>%
  mutate(immunised = unimmunised * (1 - immunization_effect)) %>%
  column_to_rownames(var = "age_group") %>%
  as.matrix()

susceptibility

# demography-in-susceptibility matrix
p_susceptibility <- tibble(
  age_group = demography_groups,
  susceptible = c(0.1, 0.1, 0.1, 0.1, 0.1),
  immunised = c(0.4, 0.4, 0.4, 0.4, 0.4)
) %>%
  mutate(unimmunised = 1 - immunised - susceptible) %>%
  column_to_rownames(var = "age_group") %>%
  as.matrix()

p_susceptibility
```

### Reference

- https://epiverse-trace.github.io/finalsize/articles/susceptibility_matrices.html

## Q6: final size of an epidemic 

Question: How to calculate the final size of an epidemic accounting for heterogeneous social contact and homogeneous susceptibility in all age groups?

Conditions:

### A6

```{r}
library(finalsize)
library(socialmixr)
library(tidyverse)

# get UK polymod data
polymod <- socialmixr::polymod
contact_data <- socialmixr::contact_matrix(
  polymod,
  countries = "United Kingdom",
  age.limits = c(0, 5, 18, 40, 65),
  symmetric = TRUE
)

# get the contact matrix and demography data
contact_matrix <- t(contact_data$matrix)

# scale the contact matrix so the largest eigenvalue is 1.0
# this is to ensure that the overall epidemic dynamics correctly reflect
# the assumed value of R0
contact_matrix_scaled <- contact_matrix / max(Re(eigen(contact_matrix)$values))

# Define population in each age group
demography_vector <- contact_data$demography$population
demography_groups <- contact_data$demography$age.group

# divide each row of the contact matrix by the corresponding demography
# this reflects the assumption that each individual in group {j} make contacts
# at random with individuals in group {i}
contact_matrix_random <- contact_matrix_scaled / demography_vector

# Define susceptibility of each group
# susceptibility matrix
susceptibility <- tibble(
  age_group = demography_groups,
  susceptible = c(0.8, 0.8, 0.8, 0.8, 0.8)
) %>%
  column_to_rownames(var = "age_group") %>%
  as.matrix()

susceptibility

# Assume uniform susceptibility within age groups
# demography-in-susceptibility matrix
p_susceptibility <- tibble(
  age_group = demography_groups,
  susceptible = c(1.0, 1.0, 1.0, 1.0, 1.0)
) %>%
  column_to_rownames(var = "age_group") %>%
  as.matrix()

p_susceptibility

# R0 of the disease
r0 <- 1.5 # assumed for pandemic influenza

# Calculate the proportion of individuals infected in each age group
final_size(
  r0 = r0,
  contact_matrix = contact_matrix_random,
  demography_vector = demography_vector,
  susceptibility = susceptibility,
  p_susceptibility = p_susceptibility
)
```

### Reference

- https://epiverse-trace.github.io/finalsize/articles/susceptibility_matrices.html
- https://epiverse-trace.github.io/finalsize/articles/varying_contacts.html
