---
title: "How to estimate the weekly growth rate?"
format: 
  html:
    code-link: true
editor: source
editor_options: 
  chunk_output_type: console
date: last-modified
toc: true
toc_float: true
---

## Topic

growth rate

## Introductory prompt

```{r}
#| child: '../prompts/prompt_01.qmd'
```

```{r}
#| child: '../prompts/prompt_02.qmd'
```

## Question 

How to calculate the weekly growth rate of an outbreak? 

Conditions: 

- Calculate the weekly growth rate from data collected per day.
- Use the `linelist` object in the `ebola_sim_clean` list from the `{outbreaks}` R package. `linelist` is an outbreak data set. 
- Use the `date_of _onset` column of `linelist` to calculate the weekly growth rate. 
- Keep the first 20 weeks in `linelist` as period of analysis.

## Answer

```{r}
#| warning: false
#| eval: false

# Calculate the weekly growth rate of an outbreak

# Load required packages
library(outbreaks)
library(incidence2)
library(i2extras)
library(dplyr)

# Load the simulated Ebola outbreak data
data(ebola_sim_clean)

# Extract the first element of the list
linelist <- ebola_sim_clean$linelist

# Convert the data to an incidence2 object
incidence2_data <- 
  incidence2::incidence(
    x = linelist, 
    date_index = "date_of_onset",
    interval = "week"
  )

# Filter the dataset to keep the first 20 weeks. 
incidence2_filter <- incidence2_data[1:20,]

# Model the incidence
incidence2_fit <- 
  i2extras::fit_curve(
    incidence2_filter, 
    model = "poisson", 
    alpha = 0.05
  )

# Print the model result
i2extras::growth_rate(incidence2_fit)

# Plot the model result with prediction intervals
plot(incidence2_fit, ci = FALSE, pi = TRUE)
```

- `outbreaks` package loaded for simulated Ebola data.
- `ebola_sim_clean` has the data.
- `linelist` is first element of `ebola_sim_clean`.
- `incidence()` converts `linelist` to `incidence2` object.
- `date_of_onset` column is onset dates of outbreak.
- `"week"` counts cases per week interval for growth rate.
- `incidence2` object has observations in descending order by `date_index`.
- 20 weeks considered and stored in `dat_filter`.
- `fit_curve()` fits Poisson linear regression to epicurve in `dat_filter` with alpha 0.05 for 95% confidence intervals.
- `growth_rate()` calculates weekly growth/decay rate.
- `plot()` plots fitted epicurve.

Please note that the code assumes the necessary packages are already installed. If they are not, you can install them using first the `install.packages("pak")` function and then the `pak::pak()` function for both packages in CRAN or GitHub before loading them with `library()`. 

Additionally, make sure to adjust the serial interval distribution parameters according to the specific outbreak you are analyzing.

## Reference

- https://www.reconverse.org/i2extras/articles/fitting_epicurves.html
